# Inclure vos commandes HAL personnalisées ici
# Les commandes contenues dans ce fichier seront lancées après quel'interface graphique AXIS (PyVCP inclus) aura démarré.

# **** Réglage de l'affichage de vitesse broche avec pyvcp -START ****
# **** Utilise la vitesse de broche COMMANDÉE depuis LinuxCNC puisqu'aucun codeur de broche n'a été spécifié

net spindle-cmd-rpm-abs    => pyvcp.spindle-speed

# **** force spindle at speed indicator true because we have no feedback ****

net spindle-at-speed => pyvcp.spindle-at-speed-led
sets spindle-at-speed true

# *** Cmd pour G0 X0 Y0  ***************************
net remote-o101 halui.mdi-command-00 <= pyvcp.o101

# *** Cmd pour G0 X0 Y0  Z0 ************************
net remote-o105 halui.mdi-command-01 <= pyvcp.o105

# *** Cmd pour G92 X0 Y0 ***************************
net remote-o106 halui.mdi-command-02 <= pyvcp.o106

# *** Cmd pour Touch corner ************************
net remote-o100 halui.mdi-command-04 <= pyvcp.o100

# *** Z Probe **************************************
net remote-o103 halui.mdi-command-05 <= pyvcp.o103

# *** Laser G0 X0 Y0 *******************************
net remote-o104 halui.mdi-command-06 <= pyvcp.o104

# *** Center Hole *******************************
net remote-o108 halui.mdi-command-07 <= pyvcp.o108

# *** Epaisseur *******************************
net remote-o109 halui.mdi-command-08 <= pyvcp.o109



# Elapsed time
# Charge le composant timer
loadrt time
# Ajoute le fil de servo
addf time.0 servo-thread
# Dès que le programme démarre, le timer se lance
#net prog-is-running <= halui.program.is-running
net pendant:is-running => time.0.start
# Affiche l'heure dans le paneau
net cycle-seconds time.0.seconds => pyvcp.elaps_sec
net cycle-minutes time.0.minutes => pyvcp.elaps_min
net cycle-hours time.0.hours => pyvcp.elaps_hour

